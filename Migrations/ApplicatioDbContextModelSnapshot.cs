// <auto-generated />
using System;
using E_Learning_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_LearningManagementSystem.Migrations
{
    [DbContext(typeof(ApplicatioDbContext))]
    partial class ApplicatioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.Property<int>("CoursesCourseId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsInstructorID")
                        .HasColumnType("int");

                    b.HasKey("CoursesCourseId", "InstructorsInstructorID");

                    b.HasIndex("InstructorsInstructorID");

                    b.ToTable("CourseInstructor");
                });

            modelBuilder.Entity("CourseLearner", b =>
                {
                    b.Property<int>("LearnersId")
                        .HasColumnType("int");

                    b.Property<int>("coursesCourseId")
                        .HasColumnType("int");

                    b.HasKey("LearnersId", "coursesCourseId");

                    b.HasIndex("coursesCourseId");

                    b.ToTable("CourseLearner");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Account", b =>
                {
                    b.Property<string>("AccountAddress")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Accounttype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstructorIDFK")
                        .HasColumnType("int");

                    b.HasKey("AccountAddress");

                    b.HasIndex("InstructorIDFK")
                        .IsUnique()
                        .HasFilter("[InstructorIDFK] IS NOT NULL");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Administrator", b =>
                {
                    b.Property<int>("AdminID")
                        .HasColumnType("int");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminID");

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<DateTime>("CertificateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CertificateId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("Contenttype")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContentId");

                    b.ToTable("Contents");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Duration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("DurationDate")
                        .HasColumnType("date");

                    b.Property<int>("DurationType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Durations");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int>("QuizID")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Fees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Payment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Instructor", b =>
                {
                    b.Property<int>("InstructorID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructorID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Learner", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("Learners");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Quizzes");
                });

            modelBuilder.Entity("CourseInstructor", b =>
                {
                    b.HasOne("E_Learning_Management_System.Model.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_Management_System.Model.Instructor", null)
                        .WithMany()
                        .HasForeignKey("InstructorsInstructorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseLearner", b =>
                {
                    b.HasOne("E_Learning_Management_System.Model.Learner", null)
                        .WithMany()
                        .HasForeignKey("LearnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Learning_Management_System.Model.Course", null)
                        .WithMany()
                        .HasForeignKey("coursesCourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Account", b =>
                {
                    b.HasOne("E_Learning_Management_System.Model.Instructor", "Instructor")
                        .WithOne("Account")
                        .HasForeignKey("E_Learning_Management_System.Model.Account", "InstructorIDFK")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Learner", b =>
                {
                    b.HasOne("E_Learning_Management_System.Model.Account", "account")
                        .WithOne("Learner")
                        .HasForeignKey("E_Learning_Management_System.Model.Learner", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("account");
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Account", b =>
                {
                    b.Navigation("Learner")
                        .IsRequired();
                });

            modelBuilder.Entity("E_Learning_Management_System.Model.Instructor", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
